plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.asdasd.mjeesh'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	querydsl.extendsFrom implementation, runtimeOnly, compileOnly // for queryDsl (conflict-bug with lombok)

	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	implementation 'com.querydsl:querydsl-jpa:5.0.0'       // for queryDsl model generation :5.0.0
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0'  // for download new classes from queryDsl

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

sourceSets {
	main {
		java {
			srcDirs += "$buildDir/generated/sources/annotationProcessor/java/main"
		}
	}
}

querydsl {
	jpa = true // to generate querydsl-library classes based at jpa-entities
	querydslSourcesDir = "$buildDir/generated/sources/annotationProcessor/java/main" // directory for storage library classes
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

tasks.named('test') {
	useJUnitPlatform()
}
